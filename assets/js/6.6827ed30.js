(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{527:function(t,e,o){"use strict";o.r(e);var r=o(25),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"comparepoint"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint"}},[t._v("#")]),t._v(" ComparePoint")]),t._v(" "),o("p",[o("a",{attrs:{name:"ComparePoint"}})]),t._v(" "),o("h2",{attrs:{id:"comparepoint-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-2"}},[t._v("#")]),t._v(" ComparePoint")]),t._v(" "),o("p",[t._v("A "),o("code",[t._v("ComparePoint")]),t._v(" object compares numbers against each other.\nFor example, "),o("em",[t._v("is 6 greater than 3")]),t._v(", or "),o("em",[t._v("is 8 equal to 10")]),t._v(".")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": global class")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#ComparePoint"}},[t._v("ComparePoint")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#new_ComparePoint_new"}},[t._v("new ComparePoint(operator, value)")])]),t._v(" "),o("li",[o("em",[t._v("instance")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#ComparePoint+operator"}},[t._v(".operator")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+operator"}},[t._v(".operator")]),t._v(" ⇒ "),o("code",[t._v("string")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+value"}},[t._v(".value")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+value"}},[t._v(".value")]),t._v(" ⇒ "),o("code",[t._v("number")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+isMatch"}},[t._v(".isMatch(value)")]),t._v(" ⇒ "),o("code",[t._v("boolean")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+toJSON"}},[t._v(".toJSON()")]),t._v(" ⇒ "),o("code",[t._v("Object")])]),t._v(" "),o("li",[o("a",{attrs:{href:"#ComparePoint+toString"}},[t._v(".toString()")]),t._v(" ⇒ "),o("code",[t._v("string")])])])]),t._v(" "),o("li",[o("em",[t._v("static")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#ComparePoint.isValidOperator"}},[t._v(".isValidOperator(operator)")]),t._v(" ⇒ "),o("code",[t._v("boolean")])])])])])])]),t._v(" "),o("p",[o("a",{attrs:{name:"new_ComparePoint_new"}})]),t._v(" "),o("h3",{attrs:{id:"new-comparepoint-operator-value"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#new-comparepoint-operator-value"}},[t._v("#")]),t._v(" new ComparePoint(operator, value)")]),t._v(" "),o("p",[t._v("Create a "),o("code",[t._v("ComparePoint")]),t._v(" instance.")]),t._v(" "),o("p",[o("strong",[t._v("Throws")]),t._v(":")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("CompareOperatorError")]),t._v(" operator is invalid")]),t._v(" "),o("li",[o("code",[t._v("RequiredArgumentError")]),t._v(" operator and value are required")]),t._v(" "),o("li",[o("code",[t._v("TypeError")]),t._v(" value must be numeric")])]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("operator")]),t._v(" "),o("td",[o("code",[t._v("string")])]),t._v(" "),o("td",[t._v("The comparison operator (One of "),o("code",[t._v("=")]),t._v(", "),o("code",[t._v("!=")]),t._v(", "),o("code",[t._v("<")]),t._v(", "),o("code",[t._v(">")]),t._v(", "),o("code",[t._v("<=")]),t._v(", "),o("code",[t._v(">=")]),t._v(")")])]),t._v(" "),o("tr",[o("td",[t._v("value")]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",[t._v("The value to compare to")])])])]),t._v(" "),o("p",[o("a",{attrs:{name:"ComparePoint+operator"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-operator"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-operator"}},[t._v("#")]),t._v(" comparePoint.operator")]),t._v(" "),o("p",[t._v("Set the comparison operator.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance property of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("strong",[t._v("Throws")]),t._v(":")]),t._v(" "),o("ul",[o("li",[t._v("CompareOperatorError operator is invalid")])]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("operator")]),t._v(" "),o("td",[o("code",[t._v("string")])]),t._v(" "),o("td",[t._v("One of "),o("code",[t._v("=")]),t._v(", "),o("code",[t._v("!=")]),t._v(", "),o("code",[t._v("<")]),t._v(", "),o("code",[t._v(">")]),t._v(", "),o("code",[t._v("<=")]),t._v(", "),o("code",[t._v(">=")])])])])]),t._v(" "),o("p",[o("a",{attrs:{name:"ComparePoint+operator"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-operator-⇒-string"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-operator-⇒-string"}},[t._v("#")]),t._v(" comparePoint.operator ⇒ "),o("code",[t._v("string")])]),t._v(" "),o("p",[t._v("The comparison operator.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance property of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("a",{attrs:{name:"ComparePoint+value"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-value"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-value"}},[t._v("#")]),t._v(" comparePoint.value")]),t._v(" "),o("p",[t._v("Set the value.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance property of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("strong",[t._v("Throws")]),t._v(":")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("TypeError")]),t._v(" value must be numeric")])]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("value")]),t._v(" "),o("td",[o("code",[t._v("number")])])])])]),t._v(" "),o("p",[o("a",{attrs:{name:"ComparePoint+value"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-value-⇒-number"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-value-⇒-number"}},[t._v("#")]),t._v(" comparePoint.value ⇒ "),o("code",[t._v("number")])]),t._v(" "),o("p",[t._v("The comparison value")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance property of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("a",{attrs:{name:"ComparePoint+isMatch"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-ismatch-value-⇒-boolean"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-ismatch-value-⇒-boolean"}},[t._v("#")]),t._v(" comparePoint.isMatch(value) ⇒ "),o("code",[t._v("boolean")])]),t._v(" "),o("p",[t._v("Check whether value matches the compare point")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance method of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("strong",[t._v("Returns")]),t._v(": "),o("code",[t._v("boolean")]),t._v(" - "),o("code",[t._v("true")]),t._v(" if it is a match, "),o("code",[t._v("false")]),t._v(" otherwise")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("value")]),t._v(" "),o("td",[o("code",[t._v("number")])]),t._v(" "),o("td",[t._v("The number to compare")])])])]),t._v(" "),o("p",[o("a",{attrs:{name:"ComparePoint+toJSON"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-tojson-⇒-object"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-tojson-⇒-object"}},[t._v("#")]),t._v(" comparePoint.toJSON() ⇒ "),o("code",[t._v("Object")])]),t._v(" "),o("p",[t._v("Return an object for JSON serialising.")]),t._v(" "),o("p",[t._v("This is called automatically when JSON encoding the object.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance method of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("a",{attrs:{name:"ComparePoint+toString"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-tostring-⇒-string"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-tostring-⇒-string"}},[t._v("#")]),t._v(" comparePoint.toString() ⇒ "),o("code",[t._v("string")])]),t._v(" "),o("p",[t._v("Return the String representation of the object.")]),t._v(" "),o("p",[t._v("This is called automatically when casting the object to a string.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": instance method of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("a",{attrs:{name:"ComparePoint.isValidOperator"}})]),t._v(" "),o("h3",{attrs:{id:"comparepoint-isvalidoperator-operator-⇒-boolean"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint-isvalidoperator-operator-⇒-boolean"}},[t._v("#")]),t._v(" ComparePoint.isValidOperator(operator) ⇒ "),o("code",[t._v("boolean")])]),t._v(" "),o("p",[t._v("Check if the operator is valid.")]),t._v(" "),o("p",[o("strong",[t._v("Kind")]),t._v(": static method of "),o("a",{attrs:{href:"#ComparePoint"}},[o("code",[t._v("ComparePoint")])]),o("br"),t._v(" "),o("strong",[t._v("Returns")]),t._v(": "),o("code",[t._v("boolean")]),t._v(" - "),o("code",[t._v("true")]),t._v(" if the operator is valid, "),o("code",[t._v("false")]),t._v(" otherwise")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("operator")]),t._v(" "),o("td",[o("code",[t._v("string")])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);