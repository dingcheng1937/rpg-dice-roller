(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{529:function(e,t,r){"use strict";r.r(t);var o=r(25),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"diceroller"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller"}},[e._v("#")]),e._v(" DiceRoller")]),e._v(" "),r("p",[r("a",{attrs:{name:"DiceRoller"}})]),e._v(" "),r("h2",{attrs:{id:"diceroller-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-2"}},[e._v("#")]),e._v(" DiceRoller")]),e._v(" "),r("p",[e._v("A "),r("code",[e._v("DiceRoller")]),e._v(" handles dice rolling functionality, keeps a history of rolls and can output logs\netc.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": global class"),r("br"),e._v(" "),r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"DiceRoll"}},[e._v("DiceRoll")]),e._v(" if you don't need to keep a log history of rolls")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#DiceRoller"}},[e._v("DiceRoller")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#new_DiceRoller_new"}},[e._v("new DiceRoller([data])")])]),e._v(" "),r("li",[r("em",[e._v("instance")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#DiceRoller+log"}},[e._v(".log")]),e._v(" ⇒ "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+output"}},[e._v(".output")]),e._v(" ⇒ "),r("code",[e._v("string")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+total"}},[e._v(".total")]),e._v(" ⇒ "),r("code",[e._v("number")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+clearLog"}},[e._v(".clearLog()")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+export"}},[e._v(".export([format])")]),e._v(" ⇒ "),r("code",[e._v("string")]),e._v(" | "),r("code",[e._v("null")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+import"}},[e._v(".import(data)")]),e._v(" ⇒ "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+roll"}},[e._v(".roll(...notations)")]),e._v(" ⇒ "),r("code",[e._v("DiceRoll")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+toJSON"}},[e._v(".toJSON()")]),e._v(" ⇒ "),r("code",[e._v("Object")])]),e._v(" "),r("li",[r("a",{attrs:{href:"#DiceRoller+toString"}},[e._v(".toString()")]),e._v(" ⇒ "),r("code",[e._v("string")])])])]),e._v(" "),r("li",[r("em",[e._v("static")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#DiceRoller.import"}},[e._v(".import(data)")]),e._v(" ⇒ "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])])])])])])])]),e._v(" "),r("p",[r("a",{attrs:{name:"new_DiceRoller_new"}})]),e._v(" "),r("h3",{attrs:{id:"new-diceroller-data"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-diceroller-data"}},[e._v("#")]),e._v(" new DiceRoller([data])")]),e._v(" "),r("p",[e._v("Create a DiceRoller.")]),e._v(" "),r("p",[e._v("The optional "),r("code",[e._v("data")]),e._v(" property should be either an array of "),r("code",[e._v("DiceRoll")]),e._v(" objects, or an object with\na "),r("code",[e._v("log")]),e._v(" property that contains the "),r("code",[e._v("DiceRoll")]),e._v(" objects.")]),e._v(" "),r("p",[r("strong",[e._v("Throws")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("TypeError")]),e._v(" if data is an object, it must have a "),r("code",[e._v("log[]")]),e._v(" property")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Param")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("[data]")]),e._v(" "),r("td",[r("code",[e._v("Object")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("The data to import")])]),e._v(" "),r("tr",[r("td",[e._v("[data.log]")]),e._v(" "),r("td",[r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("If "),r("code",[e._v("data")]),e._v(" is an object, it must contain an array of "),r("code",[e._v("DiceRoll")]),e._v("s")])])])]),e._v(" "),r("p",[r("a",{attrs:{name:"DiceRoller+log"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-log-⇒-array-diceroll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-log-⇒-array-diceroll"}},[e._v("#")]),e._v(" diceRoller.log ⇒ "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("p",[e._v("The list of roll logs.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance property of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("a",{attrs:{name:"DiceRoller+output"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-output-⇒-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-output-⇒-string"}},[e._v("#")]),e._v(" diceRoller.output ⇒ "),r("code",[e._v("string")])]),e._v(" "),r("p",[e._v("String representation of the rolls in the log")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance property of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("Example")])]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("d20"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("d6"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("d8"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v("\n")])])]),r("p",[r("a",{attrs:{name:"DiceRoller+total"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-total-⇒-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-total-⇒-number"}},[e._v("#")]),e._v(" diceRoller.total ⇒ "),r("code",[e._v("number")])]),e._v(" "),r("p",[e._v("The sum of all the rolls in the log")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance property of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller+log"}},[e._v("log")]),r("br"),e._v(" "),r("a",{attrs:{name:"DiceRoller+clearLog"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-clearlog"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-clearlog"}},[e._v("#")]),e._v(" diceRoller.clearLog()")]),e._v(" "),r("p",[e._v("Clear the roll history log.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller+log"}},[e._v("log")]),r("br"),e._v(" "),r("a",{attrs:{name:"DiceRoller+export"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-export-format-⇒-string-null"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-export-format-⇒-string-null"}},[e._v("#")]),e._v(" diceRoller.export([format]) ⇒ "),r("code",[e._v("string")]),e._v(" | "),r("code",[e._v("null")])]),e._v(" "),r("p",[e._v("Export the object in the given format.\nIf no format is specified, JSON is returned.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("Returns")]),e._v(": "),r("code",[e._v("string")]),e._v(" | "),r("code",[e._v("null")]),e._v(" - The exported data, in the specified format"),r("br"),e._v(" "),r("strong",[e._v("Throws")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("TypeError")]),e._v(" Invalid export format")])]),e._v(" "),r("p",[r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller+toJSON"}},[e._v("toJSON")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Param")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Default")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("[format]")]),e._v(" "),r("td",[r("code",[e._v("exportFormats")])]),e._v(" "),r("td",[r("code",[e._v("exportFormats#JSON")])]),e._v(" "),r("td",[e._v("The format to export the data as")])])])]),e._v(" "),r("p",[r("a",{attrs:{name:"DiceRoller+import"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-import-data-⇒-array-diceroll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-import-data-⇒-array-diceroll"}},[e._v("#")]),e._v(" diceRoller.import(data) ⇒ "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("p",[e._v("Add the data to the existing "),r("a",{attrs:{href:"#DiceRoller+log"}},[e._v("roll log")]),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("data")]),e._v(" can be an array of "),r("code",[e._v("DiceRoll")]),e._v(" objects, an object with a "),r("code",[e._v("log")]),e._v(" property that contains\n"),r("code",[e._v("DiceRoll")]),e._v(" objects, or a JSON / base64 encoded representation of either.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("Returns")]),e._v(": "),r("code",[e._v("Array.<DiceRoll>")]),e._v(" - The roll log"),r("br"),e._v(" "),r("strong",[e._v("Throws")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("DataFormatError")]),e._v(" data format invalid")]),e._v(" "),r("li",[r("code",[e._v("RequiredArgumentError")]),e._v(" data is required")]),e._v(" "),r("li",[r("code",[e._v("TypeError")]),e._v(" log must be an array")])]),e._v(" "),r("p",[r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller+log"}},[e._v("log")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Param")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("data")]),e._v(" "),r("td",[r("code",[e._v("string")]),e._v(" | "),r("code",[e._v("Object")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("The data to import")])]),e._v(" "),r("tr",[r("td",[e._v("[data.log]")]),e._v(" "),r("td",[r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("If "),r("code",[e._v("data")]),e._v(" is an object, it must contain an array of "),r("code",[e._v("DiceRoll")]),e._v("s")])])])]),e._v(" "),r("p",[r("a",{attrs:{name:"DiceRoller+roll"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-roll-notations-⇒-diceroll-array-diceroll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-roll-notations-⇒-diceroll-array-diceroll"}},[e._v("#")]),e._v(" diceRoller.roll(...notations) ⇒ "),r("code",[e._v("DiceRoll")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("p",[e._v("Roll the given dice notation(s) and return the corresponding "),r("code",[e._v("DiceRoll")]),e._v(" objects.")]),e._v(" "),r("p",[e._v("You can roll a single notation, or multiple at once.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("Returns")]),e._v(": "),r("code",[e._v("DiceRoll")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")]),e._v(" - If a single notation is passed, a single "),r("code",[e._v("DiceRoll")]),e._v(" is returned,\notherwise an array of "),r("code",[e._v("DiceRoll")]),e._v(" objects is returned"),r("br"),e._v(" "),r("strong",[e._v("Throws")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("NotationError")]),e._v(" notation is invalid")]),e._v(" "),r("li",[r("code",[e._v("RequiredArgumentError")]),e._v(" notation is required")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Param")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("...notations")]),e._v(" "),r("td",[r("code",[e._v("string")])]),e._v(" "),r("td",[e._v("The notations to roll")])])])]),e._v(" "),r("p",[r("strong",[e._v("Example")]),e._v(" "),r("em",[e._v("(Single notation)")])]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[e._v("diceRoller"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("roll")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'2d6'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[r("strong",[e._v("Example")]),e._v(" "),r("em",[e._v("(Multiple notations)")])]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("roll")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'2d6'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'4d10'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'d8+4d6'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[r("a",{attrs:{name:"DiceRoller+toJSON"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-tojson-⇒-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-tojson-⇒-object"}},[e._v("#")]),e._v(" diceRoller.toJSON() ⇒ "),r("code",[e._v("Object")])]),e._v(" "),r("p",[e._v("Return an object for JSON serialising.")]),e._v(" "),r("p",[e._v("This is called automatically when JSON encoding the object.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("a",{attrs:{name:"DiceRoller+toString"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-tostring-⇒-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-tostring-⇒-string"}},[e._v("#")]),e._v(" diceRoller.toString() ⇒ "),r("code",[e._v("string")])]),e._v(" "),r("p",[e._v("Return the String representation of the object.")]),e._v(" "),r("p",[e._v("This is called automatically when casting the object to a string.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": instance method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("See")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller+output"}},[e._v("output")]),r("br"),e._v(" "),r("a",{attrs:{name:"DiceRoller.import"}})]),e._v(" "),r("h3",{attrs:{id:"diceroller-import-data-⇒-diceroller"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#diceroller-import-data-⇒-diceroller"}},[e._v("#")]),e._v(" DiceRoller.import(data) ⇒ "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])])]),e._v(" "),r("p",[e._v("Create a new "),r("code",[e._v("DiceRoller")]),e._v(" instance with the given data.")]),e._v(" "),r("p",[r("code",[e._v("data")]),e._v(" can be an array of "),r("code",[e._v("DiceRoll")]),e._v(" objects, an object with a "),r("code",[e._v("log")]),e._v(" property that contains the\n"),r("code",[e._v("DiceRoll")]),e._v(" objects, or a JSON / base64 encoded representation of either.")]),e._v(" "),r("p",[r("strong",[e._v("Kind")]),e._v(": static method of "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),r("br"),e._v(" "),r("strong",[e._v("Returns")]),e._v(": "),r("a",{attrs:{href:"#DiceRoller"}},[r("code",[e._v("DiceRoller")])]),e._v(" - The new "),r("code",[e._v("DiceRoller")]),e._v(" instance"),r("br"),e._v(" "),r("strong",[e._v("Throws")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("DataFormatError")]),e._v(" data format invalid")]),e._v(" "),r("li",[r("code",[e._v("RequiredArgumentError")]),e._v(" data is required")]),e._v(" "),r("li",[r("code",[e._v("TypeError")]),e._v(" log must be an array")])]),e._v(" "),r("p",[r("strong",[e._v("See")]),e._v(": instance method "),r("a",{attrs:{href:"#DiceRoller+import"}},[e._v("import")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Param")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("data")]),e._v(" "),r("td",[r("code",[e._v("string")]),e._v(" | "),r("code",[e._v("Object")]),e._v(" | "),r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("The data to import")])]),e._v(" "),r("tr",[r("td",[e._v("[data.log]")]),e._v(" "),r("td",[r("code",[e._v("Array.<DiceRoll>")])]),e._v(" "),r("td",[e._v("If "),r("code",[e._v("data")]),e._v(" is an object, it must contain an array of "),r("code",[e._v("DiceRoll")]),e._v("s")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);